plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'com.modrinth.minotaur' version '2.+'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version + "+" + project.minecraft_version

allprojects {
	apply plugin: 'fabric-loom'
	apply plugin: 'maven-publish'
	group = project.maven_group

	repositories {
		// Add repositories to retrieve artifacts from in here.
		// You should only use this when depending on other mods because
		// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
		// See https://docs.gradle.org/current/userguide/declaring_repositories.html
		// for more information about repositories.
		maven { url 'https://maven.nucleoid.xyz' }
		//Nbt Crafting
		maven {
			name "Siphalor's Maven"
			url "https://maven.siphalor.de"
		}
		// For some testing dependencies of Nbt Crafting
		maven {
			name "Jitpack"
			url "https://jitpack.io"
		}
	}

	dependencies {
		// To change the versions see the gradle.properties file
		minecraft "com.mojang:minecraft:${project.minecraft_version}"
		mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
		modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

		// Fabric API. This is technically optional, but you probably want it anyway.
		modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

		modImplementation include("eu.pb4:polymer:0.2.13+1.19.2") //https://maven.nucleoid.xyz/eu/pb4/polymer/
		modImplementation include("eu.pb4:polymer-blocks:0.1.0-alpha.8+1.19.2") //https://maven.nucleoid.xyz/eu/pb4/polymer-blocks/
		modImplementation include("eu.pb4:hologram-api:0.2.2+1.19") //https://maven.nucleoid.xyz/eu/pb4/hologram-api/
		modImplementation include("fr.catcore:server-translations-api:1.4.16+1.19") //https://maven.nucleoid.xyz/fr/catcore/server-translations-api/
		modImplementation "eu.pb4:polymer-autohost:0.1.2+1.19.2"
	}

	def version_replaces = [
	        "version": project.version,
			"api_version": api_version + "+" + project.minecraft_version
	]

	processResources {
		inputs.properties(version_replaces)

		filesMatching("fabric.mod.json") {
			expand(version_replaces)
		}
	}

	tasks.withType(JavaCompile).configureEach {
		// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
		it.options.release = 17
	}

	java {
		// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
		// if it is present.
		// If you remove this line, sources will not be generated.
		withSourcesJar()
	}
}

dependencies {
	api project(path: ":server_mobs-api", configuration: "namedElements")
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}

	exclude "**/*.xcf"
	exclude "**/*sync-conflict*"
	exclude "/tools"
	exclude "**/unused"
}

loom {
	accessWidenerPath = file("src/main/resources/server_mobs.accesswidener")
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

remapJar.dependsOn(project(":server_mobs-api").tasks.remapJar)

if (System.getenv("MODRINTH_TOKEN")) {
	modrinth {
		token = System.getenv("MODRINTH_TOKEN")
		projectId = "server_mobs"
		versionNumber = "" + version
		versionType = "release"
		uploadFile = project.remapJar
		gameVersions = [((String) project.minecraft_version)]
		loaders = ["fabric"]
		dependencies {
			required.project("fabric-api")
			required.project("nbt-crafting")
			required.project("server_mobs_api")
			optional.project("polypack_host")
			embedded.project("holograms")
			embedded.project("polymer")
		}
	}

	/*remapJar {
		finalizedBy project.tasks.modrinth
	}*/
}